<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="3" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-11-10T15:30:04 IST" name="Suite" finished-at="2024-11-10T15:31:41 IST" duration-ms="96725">
    <groups>
    </groups>
    <test started-at="2024-11-10T15:30:04 IST" name="Submitting an order" finished-at="2024-11-10T15:31:15 IST" duration-ms="70149">
      <class name="endtoendOrder.PurchasingAnItem">
        <test-method is-config="true" signature="loginApp()[pri:0, instance:endtoendOrder.PurchasingAnItem@480d3575]" started-at="2024-11-10T15:30:05 IST" name="loginApp" finished-at="2024-11-10T15:30:14 IST" duration-ms="9911" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginApp -->
        <test-method signature="puchaseItem(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:endtoendOrder.PurchasingAnItem@480d3575]" started-at="2024-11-10T15:30:14 IST" name="puchaseItem" data-provider="getData" finished-at="2024-11-10T15:30:30 IST" duration-ms="15957" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[swamy@test.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Virat@183]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ADIDAS ORIGINAL]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Iphone 13 pro]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- puchaseItem -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:endtoendOrder.PurchasingAnItem@480d3575]" started-at="2024-11-10T15:30:30 IST" name="closeBrowser" finished-at="2024-11-10T15:30:32 IST" duration-ms="1634" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="loginApp()[pri:0, instance:endtoendOrder.PurchasingAnItem@480d3575]" started-at="2024-11-10T15:30:32 IST" name="loginApp" finished-at="2024-11-10T15:30:41 IST" duration-ms="8567" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginApp -->
        <test-method signature="puchaseItem(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:endtoendOrder.PurchasingAnItem@480d3575]" started-at="2024-11-10T15:30:41 IST" name="puchaseItem" data-provider="getData" finished-at="2024-11-10T15:30:57 IST" duration-ms="16031" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[swamy@test.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Virat@183]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ADIDAS ORIGINAL]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[ZARA COAT 3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- puchaseItem -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:endtoendOrder.PurchasingAnItem@480d3575]" started-at="2024-11-10T15:30:57 IST" name="closeBrowser" finished-at="2024-11-10T15:30:59 IST" duration-ms="2337" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="loginApp()[pri:0, instance:endtoendOrder.PurchasingAnItem@480d3575]" started-at="2024-11-10T15:30:59 IST" name="loginApp" finished-at="2024-11-10T15:31:09 IST" duration-ms="9522" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginApp -->
        <test-method signature="verifyOrederedItems()[pri:0, instance:endtoendOrder.PurchasingAnItem@480d3575]" started-at="2024-11-10T15:31:09 IST" name="verifyOrederedItems" finished-at="2024-11-10T15:31:11 IST" depends-on-methods="endtoendOrder.PurchasingAnItem.puchaseItem" duration-ms="2937" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyOrederedItems -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:endtoendOrder.PurchasingAnItem@480d3575]" started-at="2024-11-10T15:31:11 IST" name="closeBrowser" finished-at="2024-11-10T15:31:15 IST" duration-ms="3178" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- endtoendOrder.PurchasingAnItem -->
    </test> <!-- Submitting an order -->
    <test started-at="2024-11-10T15:31:15 IST" name="Error Validation" finished-at="2024-11-10T15:31:41 IST" duration-ms="26088">
      <class name="endtoendOrder.ErrorValidation">
        <test-method is-config="true" signature="loginApp()[pri:0, instance:endtoendOrder.ErrorValidation@7bf3a5d8]" started-at="2024-11-10T15:31:15 IST" name="loginApp" finished-at="2024-11-10T15:31:24 IST" duration-ms="9340" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginApp -->
        <test-method signature="errorProductValidation()[pri:0, instance:endtoendOrder.ErrorValidation@7bf3a5d8]" started-at="2024-11-10T15:31:24 IST" name="errorProductValidation" finished-at="2024-11-10T15:31:27 IST" duration-ms="2960" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at endtoendOrder.ErrorValidation.errorProductValidation(ErrorValidation.java:33)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- errorProductValidation -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:endtoendOrder.ErrorValidation@7bf3a5d8]" started-at="2024-11-10T15:31:28 IST" name="closeBrowser" finished-at="2024-11-10T15:31:29 IST" duration-ms="1899" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="loginApp()[pri:0, instance:endtoendOrder.ErrorValidation@7bf3a5d8]" started-at="2024-11-10T15:31:29 IST" name="loginApp" finished-at="2024-11-10T15:31:39 IST" duration-ms="9316" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginApp -->
        <test-method signature="verifyErrormessage()[pri:0, instance:endtoendOrder.ErrorValidation@7bf3a5d8]" started-at="2024-11-10T15:31:39 IST" name="verifyErrormessage" finished-at="2024-11-10T15:31:39 IST" duration-ms="598" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrect email  password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrect email  password.]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at endtoendOrder.ErrorValidation.verifyErrormessage(ErrorValidation.java:24)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyErrormessage -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:endtoendOrder.ErrorValidation@7bf3a5d8]" started-at="2024-11-10T15:31:40 IST" name="closeBrowser" finished-at="2024-11-10T15:31:41 IST" duration-ms="1469" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- endtoendOrder.ErrorValidation -->
    </test> <!-- Error Validation -->
  </suite> <!-- Suite -->
</testng-results>
